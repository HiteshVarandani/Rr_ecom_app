<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite id="0" name="/projects/challenge/src/components/Product.spec.js" errors="0" package="/projects/challenge/src/components/Product.spec.js" hostname="localhost" tests="2" failures="1" time="8.146" timestamp="2021-06-13T07:45:50">
    <properties>
    </properties>
    <testcase classname="Product component" name="should render title and price" time="0">
      <failure message="Error: expect(received).toBe(expected)

Expected value to be (using ===):
  &quot;Test Product - $9.99&quot;
Received:
  &quot;Test Product - $9.99 x &quot;
    at Object.it (/projects/challenge/src/components/Product.spec.js:22:30)
    at Object.asyncFn (/projects/challenge/node_modules/jest-jasmine2/build/jasmine-async.js:68:30)
    at resolve (/projects/challenge/node_modules/jest-jasmine2/build/queueRunner.js:38:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/projects/challenge/node_modules/jest-jasmine2/build/queueRunner.js:31:21)
    at Promise.resolve.then.el (/projects/challenge/node_modules/p-map/index.js:46:16)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)" type="AssertionError">
      </failure>
    </testcase>
    <testcase classname="when given inventory" name="should render title, price, and inventory" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="1" name="/projects/challenge/src/reducers/cart.spec.js" errors="0" package="/projects/challenge/src/reducers/cart.spec.js" hostname="localhost" tests="5" failures="0" time="8.512" timestamp="2021-06-13T07:45:49">
    <properties>
    </properties>
    <testcase classname="cart" name="should provide the initial state" time="0">
    </testcase>
    <testcase classname="cart" name="should handle CHECKOUT_REQUEST action" time="0">
    </testcase>
    <testcase classname="cart" name="should handle CHECKOUT_FAILURE action" time="0">
    </testcase>
    <testcase classname="cart" name="should handle ADD_TO_CART action" time="0">
    </testcase>
    <testcase classname="when product is already in cart" name="should handle ADD_TO_CART action" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="2" name="/projects/challenge/src/components/Cart.spec.js" errors="0" package="/projects/challenge/src/components/Cart.spec.js" hostname="localhost" tests="6" failures="1" time="8.882" timestamp="2021-06-13T07:45:50">
    <properties>
    </properties>
    <testcase classname="Cart component" name="should display total" time="0">
    </testcase>
    <testcase classname="Cart component" name="should display add some products message" time="0">
      <failure message="Error: Method “text” is meant to be run on 1 node. 0 found instead.
    at ShallowWrapper.single (/projects/challenge/node_modules/enzyme/build/ShallowWrapper.js:2197:17)
    at ShallowWrapper.text (/projects/challenge/node_modules/enzyme/build/ShallowWrapper.js:1302:21)
    at Object.it (/projects/challenge/src/components/Cart.spec.js:37:15)
    at Object.asyncFn (/projects/challenge/node_modules/jest-jasmine2/build/jasmine-async.js:68:30)
    at resolve (/projects/challenge/node_modules/jest-jasmine2/build/queueRunner.js:38:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/projects/challenge/node_modules/jest-jasmine2/build/queueRunner.js:31:21)
    at Promise.resolve.then.el (/projects/challenge/node_modules/p-map/index.js:46:16)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)" type="AssertionError">
      </failure>
    </testcase>
    <testcase classname="Cart component" name="should disable button" time="0">
    </testcase>
    <testcase classname="when given product" name="should render products" time="0">
    </testcase>
    <testcase classname="when given product" name="should not disable button" time="0">
    </testcase>
    <testcase classname="when given product" name="should call action on button click" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="3" name="/projects/challenge/src/components/ProductsList.spec.js" errors="0" package="/projects/challenge/src/components/ProductsList.spec.js" hostname="localhost" tests="2" failures="0" time="8.583" timestamp="2021-06-13T07:45:50">
    <properties>
    </properties>
    <testcase classname="ProductsList component" name="should render title" time="0">
    </testcase>
    <testcase classname="ProductsList component" name="should render children" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="4" name="/projects/challenge/src/reducers/products.spec.js" errors="0" package="/projects/challenge/src/reducers/products.spec.js" hostname="localhost" tests="4" failures="0" time="8.895" timestamp="2021-06-13T07:45:50">
    <properties>
    </properties>
    <testcase classname="when products are received" name="contains the products from the action" time="0">
    </testcase>
    <testcase classname="when products are received" name="contains no other products" time="0">
    </testcase>
    <testcase classname="when products are received" name="lists all of the products as visible" time="0">
    </testcase>
    <testcase classname="when an item is added to the cart" name="the inventory is reduced" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="5" name="/projects/challenge/src/reducers/index.spec.js" errors="0" package="/projects/challenge/src/reducers/index.spec.js" hostname="localhost" tests="2" failures="2" time="8.923" timestamp="2021-06-13T07:45:50">
    <properties>
    </properties>
    <testcase classname="getTotal" name="should return price total" time="0">
      <failure message="TypeError: Cannot read property &apos;price&apos; of undefined
    at fromCart.getCart.addedIds.forEach.pId (/projects/challenge/src/reducers/index.js:17:47)
    at Array.forEach (&lt;anonymous&gt;)
    at Object.&lt;anonymous&gt;.exports.getTotal.state (/projects/challenge/src/reducers/index.js:15:38)
    at Object.it (/projects/challenge/src/reducers/index.spec.js:36:34)
    at Object.asyncFn (/projects/challenge/node_modules/jest-jasmine2/build/jasmine-async.js:68:30)
    at resolve (/projects/challenge/node_modules/jest-jasmine2/build/queueRunner.js:38:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/projects/challenge/node_modules/jest-jasmine2/build/queueRunner.js:31:21)
    at Promise.resolve.then.el (/projects/challenge/node_modules/p-map/index.js:46:16)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)" type="AssertionError">
      </failure>
    </testcase>
    <testcase classname="getCartProducts" name="should return products with quantity" time="0">
      <failure message="Error: expect(received).toEqual(expected)

Expected value to equal:
  [{&quot;id&quot;: 1, &quot;price&quot;: 1.99, &quot;quantity&quot;: 4}, {&quot;id&quot;: 1, &quot;price&quot;: 4.99, &quot;quantity&quot;: 2}, {&quot;id&quot;: 1, &quot;price&quot;: 9.99, &quot;quantity&quot;: 1}]
Received:
  [{&quot;quantity&quot;: 4}, {&quot;quantity&quot;: 2}, {&quot;quantity&quot;: 1}]

Difference:

- Expected
+ Received

Array [
   Object {
-    &quot;id&quot;: 1,
-    &quot;price&quot;: 1.99,
     &quot;quantity&quot;: 4,
   },
   Object {
-    &quot;id&quot;: 1,
-    &quot;price&quot;: 4.99,
     &quot;quantity&quot;: 2,
   },
   Object {
-    &quot;id&quot;: 1,
-    &quot;price&quot;: 9.99,
     &quot;quantity&quot;: 1,
   },
 ]
    at Object.it (/projects/challenge/src/reducers/index.spec.js:69:50)
    at Object.asyncFn (/projects/challenge/node_modules/jest-jasmine2/build/jasmine-async.js:68:30)
    at resolve (/projects/challenge/node_modules/jest-jasmine2/build/queueRunner.js:38:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/projects/challenge/node_modules/jest-jasmine2/build/queueRunner.js:31:21)
    at Promise.resolve.then.el (/projects/challenge/node_modules/p-map/index.js:46:16)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:189:7)" type="AssertionError">
      </failure>
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
  <testsuite id="6" name="/projects/challenge/src/components/ProductItem.spec.js" errors="0" package="/projects/challenge/src/components/ProductItem.spec.js" hostname="localhost" tests="6" failures="0" time="9.086" timestamp="2021-06-13T07:45:50">
    <properties>
    </properties>
    <testcase classname="ProductItem component" name="should render product" time="0">
    </testcase>
    <testcase classname="ProductItem component" name="should render Add To Cart message" time="0">
    </testcase>
    <testcase classname="ProductItem component" name="should not disable button" time="0">
    </testcase>
    <testcase classname="ProductItem component" name="should call action on button click" time="0">
    </testcase>
    <testcase classname="when product inventory is 0" name="should render Sold Out message" time="0">
    </testcase>
    <testcase classname="when product inventory is 0" name="should disable button" time="0">
    </testcase>
    <system-out/>
    <system-err/>
  </testsuite>
</testsuites>